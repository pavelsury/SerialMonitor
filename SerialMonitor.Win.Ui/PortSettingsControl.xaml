<UserControl x:Class="SerialMonitor.Win.Ui.PortSettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:enums="clr-namespace:SerialMonitor.Business.Enums;assembly=SerialMonitor2.Business"
             xmlns:data="clr-namespace:SerialMonitor.Business.Data;assembly=SerialMonitor2.Business"
             xmlns:ports="clr-namespace:System.IO.Ports;assembly=System"
             xmlns:business="clr-namespace:SerialMonitor.Win.Business;assembly=SerialMonitor2.Win.Business"
             xmlns:rules="clr-namespace:SerialMonitor.Win.Ui.Rules"
             xmlns:ui="clr-namespace:SerialMonitor.Win.Ui"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance business:WinSettingsManager}"
             d:DesignHeight="600" d:DesignWidth="600"
             Name="Control">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SerialMonitor2.Ui;component/Converters/Converters.xaml"/>
                <ResourceDictionary Source="/SerialMonitor2.Ui;component/Styles/SettingsStyle.xaml"/>
                <ResourceDictionary Source="/SerialMonitor2.Ui;component/Styles/CheckBoxStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <rules:IntNonnegativeRule x:Key="IntNonnegativeRule"/>
            <sys:Double x:Key="LabelWidth">150</sys:Double>
            <sys:Double x:Key="TextBoxWidth">105</sys:Double>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <WrapPanel Grid.Row="0" Orientation="Horizontal" Margin="10,0,0,10">
            <TextBlock Name="PortTextBlock" VerticalAlignment="Center" Margin="0,0,20,10"
                       Foreground="{DynamicResource {x:Static ui:ResourceKeys.WindowPanelTextBrushKey}}">
                <Run Text="Settings for port: "/>
                <Run Text="{Binding SelectedPort.Name, FallbackValue='no COM port available'}" FontWeight="Bold">
                    <Run.Style>
                        <Style TargetType="{x:Type Run}">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static ui:ResourceKeys.WindowPanelTextBrushKey}}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedPort}" Value="{x:Null}">
                                    <Setter Property="Foreground" Value="DarkOrange"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Run.Style>
                </Run>
            </TextBlock>

            <Border>
                <Border.Width>
                    <MultiBinding Converter="{StaticResource MasterWidthToWidthConverter}">
                        <Binding Path="ActualWidth" ElementName="Control"/>
                        <Binding Path="ActualWidth" ElementName="PortTextBlock"/>
                        <Binding Path="ActualWidth" ElementName="ResetButton"/>
                        <Binding Source="30"/>
                    </MultiBinding>
                </Border.Width>
            </Border>

            <Button Name="ResetButton" Content="Reset to defaults"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Margin="0,0,0,10"
                    Padding="10,3,10,3"
                    Click="OnResetButtonClick"
                    Style="{DynamicResource {x:Static ui:ResourceKeys.ButtonStyleKey}}"/>
        </WrapPanel>

        <WrapPanel Grid.Row="1" Orientation="Vertical">
            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Baud rate:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox Name="BaudRateComboBox" Width="{StaticResource TextBoxWidth}" IsEditable="True"
                      Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}"
                      VerticalContentAlignment="Center"
                      LostFocus="OnComboBoxLostFocus"
                      KeyDown="OnKeyDown"
                      SelectedValuePath="Tag">
                    <ComboBox.Text>
                        <Binding Path="SelectedPort.Settings.BaudRate" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <rules:IntPositiveRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.Text>
                    <ui:ContentControlInt Content="110"/>
                    <ui:ContentControlInt Content="300"/>
                    <ui:ContentControlInt Content="600"/>
                    <ui:ContentControlInt Content="1200"/>
                    <ui:ContentControlInt Content="2400"/>
                    <ui:ContentControlInt Content="4800"/>
                    <ui:ContentControlInt Content="9600"/>
                    <ui:ContentControlInt Content="14400"/>
                    <ui:ContentControlInt Content="19200"/>
                    <ui:ContentControlInt Content="28800"/>
                    <ui:ContentControlInt Content="38400"/>
                    <ui:ContentControlInt Content="56000"/>
                    <ui:ContentControlInt Content="57600"/>
                    <ui:ContentControlInt Content="115200"/>
                    <ui:ContentControlInt Content="128000"/>
                    <ui:ContentControlInt Content="153600"/>
                    <ui:ContentControlInt Content="230400"/>
                    <ui:ContentControlInt Content="256000"/>
                    <ui:ContentControlInt Content="460800"/>
                    <ui:ContentControlInt Content="921600"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Receive EOL:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox SelectedValue="{Binding SelectedPort.Settings.ReceivingNewline}" SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ContentControl Tag="{x:Static enums:EReceivingNewline.Crlf}" Content="CR + LF"/>
                    <ContentControl Tag="{x:Static enums:EReceivingNewline.Lf}" Content="LF"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Send EOL:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox SelectedValue="{Binding SelectedPort.Settings.SendingNewline}" SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ContentControl Tag="{x:Static enums:ESendingNewline.None}" Content="None"/>
                    <ContentControl Tag="{x:Static enums:ESendingNewline.Crlf}" Content="CR + LF"/>
                    <ContentControl Tag="{x:Static enums:ESendingNewline.Lf}" Content="LF"/>
                    <ContentControl Tag="{x:Static enums:ESendingNewline.Custom}" Content="Custom"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Custom EOL:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ui:TextBoxEx Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.TextBoxStyleKey}}"
                              TextEx="{Binding SelectedPort.Settings.SendingCustomNewline}"
                              VerticalContentAlignment="Center"
                              IsEnabled="{Binding SelectedPort.Settings.SendingNewline, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static enums:ESendingNewline.Custom}}"/>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Data bits:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox SelectedValue="{Binding SelectedPort.Settings.DataBits}"
                          SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ui:ContentControlInt Content="5"/>
                    <ui:ContentControlInt Content="6"/>
                    <ui:ContentControlInt Content="7"/>
                    <ui:ContentControlInt Content="8"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Encoding:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox ItemsSource="{Binding Encodings, ElementName=Control}"
                          SelectedValue="{Binding SelectedPort.Settings.Encoding}"
                          SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}"/>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Handshake:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox SelectedValue="{Binding SelectedPort.Settings.Handshake}" SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ContentControl Tag="{x:Static ports:Handshake.None}" Content="None"/>
                    <ContentControl Tag="{x:Static ports:Handshake.XOnXOff}" Content="XOnXOff"/>
                    <ContentControl Tag="{x:Static ports:Handshake.RequestToSend}" Content="RequestToSend"/>
                    <ContentControl Tag="{x:Static ports:Handshake.RequestToSendXOnXOff}" Content="RequestToSendXOnXOff"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Parity:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox SelectedValue="{Binding SelectedPort.Settings.Parity}" SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ContentControl Tag="{x:Static ports:Parity.None}" Content="None"/>
                    <ContentControl Tag="{x:Static ports:Parity.Odd}" Content="Odd"/>
                    <ContentControl Tag="{x:Static ports:Parity.Even}" Content="Even"/>
                    <ContentControl Tag="{x:Static ports:Parity.Mark}" Content="Mark"/>
                    <ContentControl Tag="{x:Static ports:Parity.Space}" Content="Space"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Stop bits:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox SelectedValue="{Binding SelectedPort.Settings.StopBits}" SelectedValuePath="Tag"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ContentControl Tag="{x:Static ports:StopBits.One}" Content="1"/>
                    <ContentControl Tag="{x:Static ports:StopBits.OnePointFive}" Content="1.5"/>
                    <ContentControl Tag="{x:Static ports:StopBits.Two}" Content="2"/>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Endianness:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ComboBox ItemsSource="{Binding Endiannesses, ElementName=Control}"
                          SelectedValue="{Binding SelectedPort.Settings.Endianness}"
                          VerticalContentAlignment="Center" Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ComboBoxStyleKey}}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type enums:EPortEndianness}">
                            <TextBlock>
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource PortEndiannessToStringConverter}">
                                        <Binding Path="."/>
                                        <Binding Path="DataContext.DefaultEndianness" ElementName="Control"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Read timeout:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ui:TextBoxEx Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.TextBoxStyleKey}}"
                              TextEx="{Binding SelectedPort.Settings.ReadTimeoutMs}"
                              ValidationRule="{StaticResource IntNonnegativeRule}"
                              VerticalContentAlignment="Center"/>
            </StackPanel>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Write timeout:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <ui:TextBoxEx Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.TextBoxStyleKey}}"
                              TextEx="{Binding SelectedPort.Settings.WriteTimeoutMs}"
                              ValidationRule="{StaticResource IntNonnegativeRule}"
                              VerticalContentAlignment="Center"/>
            </StackPanel>

            <CheckBox IsChecked="{Binding SelectedPort.Settings.DTREnabled}" VerticalAlignment="Center"
                      Style="{DynamicResource {x:Static ui:ResourceKeys.CheckBoxStyleKey}}"
                      Padding="4,0,0,0"
                      Margin="{DynamicResource {x:Static ui:ResourceKeys.CheckBoxSmallMarginKey}}">
                <CheckBox.Content>
                     <!--Quick and dirty way how to make checkbox's text to be on left side--> 
                    <Label Content="Data terminal ready (DTR):"
                           Padding="0"
                           Margin="{DynamicResource {x:Static ui:ResourceKeys.CheckBoxTextSmallMarginKey}}"
                           Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                </CheckBox.Content>
            </CheckBox>

            <CheckBox IsChecked="{Binding SelectedPort.Settings.OutputToFileEnabled}" VerticalAlignment="Center"
                      Style="{DynamicResource {x:Static ui:ResourceKeys.CheckBoxStyleKey}}"
                      Padding="4,0,0,0"
                      Margin="{DynamicResource {x:Static ui:ResourceKeys.CheckBoxSmallMarginKey}}">
                <CheckBox.Content>
                    <Label Content="Enable output to file:"
                           Padding="0"
                           Margin="{DynamicResource {x:Static ui:ResourceKeys.CheckBoxTextSmallMarginKey}}"
                           Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                </CheckBox.Content>
            </CheckBox>

            <StackPanel Style="{StaticResource SettingsStackPanel}">
                <Label Content="Record file path:" Width="{StaticResource LabelWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.ThemedDialogLabelStyleKey}}"/>
                <TextBox Name="OutputFilenameTextBox"
                         Text="{Binding SelectedPort.Settings.OutputFilename}"
                         IsEnabled="{Binding SelectedPort.Settings.OutputToFileEnabled}"
                         MouseDoubleClick="OnOutputFilenameTextBoxMouseDoubleClick" VerticalContentAlignment="Center"
                         KeyDown="OnKeyDown"
                         Width="{StaticResource TextBoxWidth}" Style="{DynamicResource {x:Static ui:ResourceKeys.TextBoxStyleKey}}"/>
            </StackPanel>
        </WrapPanel>
    </Grid>
</UserControl>
